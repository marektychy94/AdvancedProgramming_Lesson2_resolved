<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>O nas</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Dodaj</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Wiek</value>
  </data>
  <data name="Are you sure abou that?" xml:space="preserve">
    <value>Czy jesteś pewny/a?</value>
  </data>
  <data name="Back to the list" xml:space="preserve">
    <value>Powrót do listy</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Stwórz</value>
  </data>
  <data name="Create device" xml:space="preserve">
    <value>Stwórz urządzenie</value>
  </data>
  <data name="Create new record" xml:space="preserve">
    <value>Stwórz nowy rekord</value>
  </data>
  <data name="Create User" xml:space="preserve">
    <value>Stwórz użytkownika</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Usuń</value>
  </data>
  <data name="Delete device" xml:space="preserve">
    <value>Usuń urządzenie</value>
  </data>
  <data name="Delete User" xml:space="preserve">
    <value>Usuń użytkownika</value>
  </data>
  <data name="Deleting..." xml:space="preserve">
    <value>Usuwanie...</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Szczegóły</value>
  </data>
  <data name="Device details" xml:space="preserve">
    <value>Szczegóły urządzenia</value>
  </data>
  <data name="Devices" xml:space="preserve">
    <value>Urządzenia</value>
  </data>
  <data name="Devices base" xml:space="preserve">
    <value>Baza danych urządzeń</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edytuj</value>
  </data>
  <data name="Edit device" xml:space="preserve">
    <value>Edytuj urządzenie</value>
  </data>
  <data name="For expand this excersise we add another translations. Default Polish, English, German and additional language: Italian, Spanish and French" xml:space="preserve">
    <value>W celu rozszerzenia tego ćwiczenia dodajemy kolejne tłumaczenia. Domyślny język polski, angielski, niemiecki oraz dodatkowy język: włoski, hiszpański i francuski</value>
  </data>
  <data name="Genre" xml:space="preserve">
    <value>Rodzaj</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Identyfikator</value>
  </data>
  <data name="Learn End" xml:space="preserve">
    <value>o tworzeniu podstawowych aplikacji mvc .net</value>
  </data>
  <data name="Learn Start" xml:space="preserve">
    <value>Uczyć się</value>
  </data>
  <data name="Mail" xml:space="preserve">
    <value>Mail</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Imię</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Cena</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Prywatność</value>
  </data>
  <data name="Privacy Policy" xml:space="preserve">
    <value>Polityka prywatności</value>
  </data>
  <data name="Privacy Policy Content" xml:space="preserve">
    <value>To jest sekret</value>
  </data>
  <data name="Producer" xml:space="preserve">
    <value>Producent</value>
  </data>
  <data name="Program example for students" xml:space="preserve">
    <value>Przykładowy program dla studentów</value>
  </data>
  <data name="Pseudo" xml:space="preserve">
    <value>Pseudonim</value>
  </data>
  <data name="Register date" xml:space="preserve">
    <value>Data utworzenia</value>
  </data>
  <data name="Reliable user" xml:space="preserve">
    <value>Użytkownik odpowiedzialny</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Wyślij</value>
  </data>
  <data name="Ticket" xml:space="preserve">
    <value>Zgłoszenie</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Typ</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>Użytkownik</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Użytkownicy</value>
  </data>
  <data name="We are students: Marek, Asia and Patrycja" xml:space="preserve">
    <value>Jesteśmy studentami: Marek, Asia i Patrycja</value>
  </data>
  <data name="We try learn about Advanced Programming at WSB Chorzów" xml:space="preserve">
    <value>Staramy się uczyć o Programowaniu Zaawansowanym w WSB Chorzów</value>
  </data>
</root>